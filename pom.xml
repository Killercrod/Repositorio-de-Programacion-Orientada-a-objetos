<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>mx.ine.ocr</groupId>
	<artifactId>ocr-db</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<!--
			Hibernate Core: motor ORM que gestiona el mapeo objeto-relacional,
			generación de SQL, manejo de sesiones/transacciones y más.
			Versión 5.6.x es estable y compatible con JPA en Java 11.
		-->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.6.15.Final</version>
		</dependency>

		<!--
			H2 Database: base de datos en memoria liviana para
			desarrollo y pruebas. Aquí la usamos en modo in-memory por defecto.
			Scope runtime porque solo se necesita en ejecución, no en compilación.
		-->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>2.1.214</version>
			<scope>runtime</scope>
		</dependency>

		<!--
			SLF4J Simple: implementación simple de logging para ver mensajes de
			Hibernate y del proyecto durante desarrollo. En producción se
			recomienda usar Logback o log4j2.
		-->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.36</version>
		</dependency>

		<!--
			JPA API: las anotaciones estándar
			Hibernate implementa estas APIs, pero la dependencia facilita
			compilar las anotaciones en tiempo de compilación.
		-->
		<dependency>
			<groupId>jakarta.persistence</groupId>
			<artifactId>jakarta.persistence-api</artifactId>
			<version>2.2.3</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<!--
				Plugin para generar un JAR "fat" ejecutable que incluye
				dependencias y manifiesto con la clase principal. Esto facilita
				ejecutar con `java -jar target/ocr-db-1.0-SNAPSHOT.jar`.
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.4</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<createDependencyReducedPom>false</createDependencyReducedPom>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>mx.ine.ocr.db.BD</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
